const apiKey = "AIzaSyAa5mJThKeXqIbcB_pBIE4jOlTw04Ej2fU";

const videos = {
   "Improve4Ever": {
    video1: {
      title: "Eating China's Weirdest PAPAD ЁЯШ▒",
      videoId: "uyMYls6iSm0",
      date: "2025-07-05",
      script: `рдпрд╣ рдЬреЛ рдкрд╛рдкрдбрд╝ рдЖрдк рджреЗрдЦ рд░рд╣реЗ рд╣реИрдВ рдЪреАрдиреА рд▓реЛрдЧ рдмрд╣реБрдд рджреАрд╡рд╛рдиреЗ рд╣реИрдВ рдХреНрдпреЛрдВрдХрд┐ рдЗрдирдХреЛ рдмрдирд╛рдиреЗ рдХрд╛ рддрд░реАрдХрд╛ рдЗрддрдирд╛ рдЬрдмрд░рджрд╕реНрдд рд╣реИ рдХрд┐ рд╕реБрдирдХреЗ рдЖрдкрдХреЗ рдореБрдВрд╣ рдореЗрдВ рдкрд╛рдиреА рдЖ рдЬрд╛рдПрдЧрд╛ рджрд░рдЕрд╕рд▓ рдЬрдм рдХрд┐рд╕реА рдлреНрд░реЗрд╢ рд╡рд╛рдЯрд░ рд╡рд╛рд▓реА рд▓рдЧреА рд╣реБрдИ рдХрд╛рдИ рдХреЛ рдирд┐рдХрд╛рд▓ рдХрд░ рдЙрд╕реЗ рдХрдИ рдмрд╛рд░ рдзреЛрдпрд╛ рдЬрд╛рддрд╛ рд╣реИ рддреЛ рдЙрд╕рдХреЗ рдЕрдВрджрд░ рд╕реЗ рдорд┐рдЯреНрдЯреА рдФрд░ рдЗрдВрдкреНрдпреЛрд░рд┐рдЯреА рд╡рдЧреИрд░рд╛ рд╕рд╛рдл рд╣реЛ рдЬрд╛рддреА рд╣реИ рдЬреЛ рднреА рд╕рд╛рдл рдХрд╛рдИ рдХреЛ рдзреВрдк рдореЗрдВ рдЧреЛрд▓ рд╕реЗрдк рдмрдирд╛рдХрд░ рд╕реБрдЦрд╛рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ рддреЛ рдЗрд╕рдореЗрдВ рдПрдХ рдЕрд▓рдЧ рд╣реА рдХреБрд░рдХреБрд░рд╛ рдкрди рдЖ рдЬрд╛рддрд╛ рд╣реИ рджреЛ-рддреАрди рджрд┐рдиреЛрдВ рддрдХ рдпрд╣ рд╣рд░рд┐ рдХрд╛рдИ рдзреВрдк рдореЗрдВ рд╕реВрдЦрддреА рд░рд╣рддреА рд╣реИ рдФрд░ рдЬрдм рдпрд╣ рдПрдХ рдмрд╛рд░ рдЕрдЪреНрдЫреЗ рд╕реЗ рд╕реВрдЦ рдЬрд╛рддреА рд╣реИ рддреЛ рдлрд┐рд░ рдЗрд╕ рддреЗрд▓ рдореЗрдВ рддрд▓рдХрд░ рдЗрд╕рдХреЗ рдкрд╛рдкрдбрд╝ рдмрдирд╛ рд▓рд┐рдП рдЬрд╛рддреЗ рд╣реИрдВ рдЬреЛ рдХреА рдЯреЗрд╕реНрдЯреА рдФрд░ рдкреЛрд╖рдг рд╕реЗ рднрд░рдкреВрд░ рд╣реЛрддреЗ рд╣реИрдВ рддреЛ рдмрддрд╛рдУ рдХрд┐рд╕ рдЦрд┐рд▓рд╛рдУрдЧреЗ рдпреЗ рдкрд╛рдкрдбрд╝`,
      hashtags: "*NO HASTAGS*"
    },
     video2: {
      title: "Would You Climb Steps for Unforgettable View ЁЯСг",
      videoId: "q1-eYtJ1oxc",
      date: "2025-07-04",
      script: `рдЖрдкрдХреА рдЯрд╛рдВрдЧреЗ рднреА рдРрд╕реЗ рдХрд╛рдВрдкрдиреЗ рд▓рдЧреЗрдЧреА рдЕрдЧрд░ рдЖрдкрдиреЗ рдЗрд╕ рдЖрд╕рдорд╛рдиреА рд╕реАрдврд╝реА рдкрд░ рдЪрдврд╝рдиреЗ рдХреА рдХреЛрд╢рд┐рд╢ рдХреА рддреЛ рджрд░реНрд╕рд▓ рдпрд╣ рдЪрд╛рдИрдирд╛ рдореЗрдВтАМ рдмрдиреЗ рдбреЗрдирдЬреАрдпрд╛ рдкрд╣рд╛рдбрд╝ рдХреА рд╕реАрдврд╝реА рд╣реИ рдЬреЛ рд▓рдЧрднрдЧ 90 рдбрд┐рдЧреНрд░реА рддрдХ рдЦрдбрд╝реА рд╣реИ рдФрд░ рдпрд╣рд╛рдВ рдЖрдкрдХреА рд╕реЗрдлреНрдЯреА рдХрд╛ рдХреЛрдИ рдЦрд╛рд╕ рдзреНрдпрд╛рди рдирд╣реАрдВ рд░рдЦрд╛ рдЬрд╛рддрд╛ рдЬрд░рд╛ рд╕реА рдЧрд▓рддреА рд╣реЛрдиреЗ рдкрд░ рдЬрдиреНрдирдд рдЬрд╛рдирд╛ рдкрдХреНрдХрд╛ рд╣реИ рдЗрд╕рд▓рд┐рдП рддреЛ рдЗрд╕реЗ рдЬрдиреНрдирддрд┐рдпрд╛ рд╕рд┐рдврд╝реА рдХрд╣рддреЗ рд╣реИрдВ рд╣рд╛рд▓рд╛рдВрдХрд┐ рд▓реЛрдХрд▓реНрд╕ рдЗрдзрд░ рдмрдбрд╝реЗ рдЖрд░рд╛рдо рд╕реЗ рдЪрдврд╝  рдЬрд╛рддреЗ рд╣реИрдВ рдФрд░ рдЗрдзрд░ рдЭрд╛рдбрд╝реВ рднреА рд▓рдЧрд╛ рджреЗрддреЗ рд╣реИрдВ рд▓реЗрдХрд┐рди рдЖрдк рдЗрд╕ рдкрд░ рдордд рдЬрд╛рдирд╛ рдХреНрдпреЛрдВрдХрд┐ рдЪрдврд╝рд╛рдиреЗ рд╕реЗ рдЬреНрдпрд╛рджрд╛ рдпрд╣рд╛рдВ рд╕реЗ рдЙрддрд╛рд░рдирд╛ рдореБрд╢реНрдХрд┐рд▓ рд╣реИ`,
      hashtags: "*NO HASTAGS*"
    },
     video3: {
      title: "рдХреАрд▓ рдирд╣реАрдВ, рдХрдореНрдлрд░реНрдЯ рдЪрд╛рд╣рд┐рдП тАУ рдШреЛрдбрд╝реЗ рдХрд╛ рд╕реНрдЯрд╛рдЗрд▓ рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ",
      videoId: "kWK2hL2h90E",
      date: "2025-07-03",
      script: `рдПрдХ рдШреЛрдбрд╝реЗ рдХреЛ рдмрд╣реБрдд рджрд░реНрдж рд╣реЛрддрд╛ рд╣реИ рдЕрдЧрд░ рдХрд▓ рдереВрдХрддреЗ рд╡рдХреНрдд рд╡рд╣ рдЧрд▓рддреА рд╕реЗ рдЬреНрдпрд╛рджрд╛ рдЕрдВрджрд░ рдЪрд▓реА рдЬрд╛рдП рдЗрд╕реАрд▓рд┐рдП рдШреЛрдбрд╝реЗ рдХреЗ рд╕рд╛рде рдРрд╕рд╛ рдирд╛ рд╣реЛ рдЖрдЬрдХрд▓ рдХреБрдЫ рд▓реЛрдЧ рдШреЛрдбрд╝реЗ рдХреЛ рдЬреВрддреЗ рдкрдирд╛рди рд░рд╣реЗ рд╣реИрдВ рдЬреЛ рдЕрд▓рдЧ-рдЕрд▓рдЧ рдХрд▓рд░ рдореЗрдВ рдЖрддреЗ рд╣реИрдВ рд╕рд╛рдереА рдЗрд╕рдореЗрдВ рдХреАрд▓ рдареЛрдХрдиреЗ рдХреА рдЬрд░реВрд░рдд рднреА рдирд╣реАрдВ рдкрдбрд╝рддреА рдЬрд╣рд╛рдВ рд▓реЛрд╣реЗ рдХреА рдирд╛рд▓ рдХреА рдЧрд▓реА рд╕рддрд╣реЛ рдкрд░ рд╕реНрд▓рд┐рдк рд╣реЛрдиреЗ рдХреЗ рдЪрд╛рдВрд╕ рд╣реЛрддреЗ рд╣реИрдВ рд╡рд╣реА рдЬреВрддреЗ рдкрд╣рдирдиреЗ рд╡рд╛рд▓рд╛ рдШреЛрдбрд╝рд╛ рд╣рд░ рд╕рддрд╣ рдкрд░ рдордЬреЗ рд╕реЗ рдЪрд▓ рд▓реЗрддрд╛ рд╣реИ рдЙрд╕реЗ рдЬреВрддреЗ рдореЗрдВ рдХрдВрдлрд░реНрдЯ рдорд╣рд╕реВрд╕ рд╣реЛрддрд╛ рд╣реИ рдЗрддрдирд╛ рд╣реА рдирд╣реАрдВ рдШреЛрдбрд╝реА рдХреЗ рд▓рд┐рдП рддреЛ рд╕реНрдкреЗрд╢рд▓ рдкрд┐рдВрдХ рдХрд▓рд░ рдХреЗ рдЬреВрддреЗ рднреА рдЖрддреЗ рд╣реИрдВ рджреЗрдЦрддреЗ рд╣реА рджреАрд╡рд╛рдиреА рд╣реЛ рдЬрд╛рдПрдЧреА рдШреЛрдбрд╝реА рдЬреВрддреЗ рдХреА`,
      hashtags: "*NO HASTAGS*"
    },
  }
  };
    // тмЕя╕П рдмрд╛рдХреА Inspire4Ever рдХреЗ videos рдпрд╣реАрдВ рдбрд╛рд▓реЛ
  

  
  




function loadChannel() {
  const name = document.getElementById('channel-name').value.trim();
  const pass = document.getElementById('channel-password').value.trim();

  if (!name || !pass) {
    Swal.fire({
      icon: 'warning',
      title: 'Oops!',
      text: 'PLEASE ENTER YOUR CHANNEL NAME AND PASSWORD',
      confirmButtonText: 'OK',
      background: '#1e1e2f',
      color: '#f0f0f5',
    });
    return;
  }

  if (!videos[name]) {
    Swal.fire({
      icon: 'error',
      title: 'INVALID CHANNEL NAME!',
      text: 'PLEASE ENTER A VALID CHANNEL NAME',
      confirmButtonText: 'OK',
      background: '#1e1e2f',
      color: '#f0f0f5',
    });
    return;
  }

  const channelPasswords = {
  "Improve4Ever": "suny123",
  
};

if (pass !== channelPasswords[name]) {
  Swal.fire({
    icon: 'error',
    title: 'WRONG PASSWORD!',
    text: 'PLEASE ENTER RIGHT PASSWORD',
    confirmButtonText: 'OK',
    background: '#1e1e2f',
    color: '#f0f0f5',
  });
  return;
}


  document.getElementById('welcome-screen').style.display = 'none';
  document.getElementById('main-container').style.display = 'flex';

  loadSubscriberCount(name);

  const select = document.getElementById('video-select');
  select.innerHTML = "";
  const data = videos[name];
  for (const key in data) {
    const option = document.createElement('option');
    option.value = key;
    option.textContent = data[key].title;
    select.appendChild(option);
  }

  document.getElementById('video-select-container').style.display = 'block';
  showVideoDetails();
}

function splitGraphemes(str) {
  return [...str.normalize('NFC')];
}

function showLoading() {
  document.getElementById('loading-spinner').style.display = 'block';
}

function hideLoading() {
  document.getElementById('loading-spinner').style.display = 'none';
}

function showVideoDetails() {
  showLoading();

  const name = document.getElementById('channel-name').value.trim();
  const key = document.getElementById('video-select').value;
  const video = videos[name][key];
  const id = video.videoId;

  document.getElementById('video-details').style.display = 'none';
  document.getElementById('video-title').innerText = "";
  document.getElementById('video-script').innerHTML = "";

  let chars = splitGraphemes(video.script);
  let i = 0;

  function typeText() {
    if (i < chars.length) {
      document.getElementById('video-script').innerHTML += chars[i];
      i++;
      setTimeout(typeText, 25);
    } else {
      document.getElementById('copy-script-btn').style.display = 'inline-block';
    }
  }

  document.getElementById('video-title').innerText = video.title;
  document.getElementById('video-link').href = `https://youtube.com/shorts/${id}`;
  document.getElementById('video-thumb').src = `https://i.ytimg.com/vi/${id}/maxresdefault.jpg`;
  document.getElementById('video-watch').innerText = `ЁЯУЕ ${video.date}`;
  document.getElementById('video-hashtags').innerText = video.hashtags;

  typeText();

  fetch(`https://www.googleapis.com/youtube/v3/videos?part=statistics,snippet&id=${id}&key=${apiKey}`)
    .then(res => res.json())
    .then(data => {
      if (data.items && data.items.length > 0) {
        const stats = data.items[0].statistics;
        document.getElementById('video-views').innerText = `ЁЯСБ ${formatNum(stats.viewCount)} Views`;
        document.getElementById('video-likes').innerText = `тЭдя╕П ${formatNum(stats.likeCount)} Likes`;

        const snippet = data.items[0].snippet;
        const publishedAt = new Date(snippet.publishedAt);
        const options = {
          year: 'numeric', month: 'long', day: 'numeric',
          hour: 'numeric', minute: '2-digit', hour12: true
        };
        const formattedTime = publishedAt.toLocaleString('en-US', options);
        document.getElementById('video-upload-time').innerText = `ЁЯХТ Upload: ${formattedTime}`;
      } else {
        document.getElementById('video-views').innerText = "ЁЯСБ Unknown Views";
        document.getElementById('video-likes').innerText = "тЭдя╕П Unknown Likes";
      }
      hideLoading();
      document.getElementById('video-details').style.display = 'block';
    })
    .catch(() => {
      document.getElementById('video-views').innerText = "ЁЯСБ Unknown Views";
      document.getElementById('video-likes').innerText = "тЭдя╕П Unknown Likes";
      hideLoading();
      document.getElementById('video-details').style.display = 'block';
    });
}

function formatNum(n) {
  n = Number(n);
  if (n >= 1e6) return (n / 1e6).toFixed(1) + "M";
  if (n >= 1e3) return (n / 1e3).toFixed(1) + "K";
  return n;
}

function copyScript() {
  const scriptText = document.getElementById('video-script').textContent;
  navigator.clipboard.writeText(scriptText)
    .then(() => console.log('Script copied successfully!'))
    .catch(err => console.error("Copy failed:", err));
}

function copyHashtags() {
  const hashtags = document.getElementById('video-hashtags').innerText;
  navigator.clipboard.writeText(hashtags).then(() => {
    alert("Hashtags copied!");
  });
}

function shareWhatsApp() {
  const hashtags = encodeURIComponent(document.getElementById('video-hashtags').innerText);
  const url = encodeURIComponent(document.getElementById('video-link').href);
  const message = `рджреЗрдЦреЛ рдпреЗ рд╡реАрдбрд┐рдпреЛ: ${url}\n\n${hashtags}`;
  window.open(`https://wa.me/?text=${message}`, '_blank');
}

function shareTwitter() {
  const hashtagsRaw = document.getElementById('video-hashtags').innerText;
  const hashtags = encodeURIComponent(hashtagsRaw.replace(/#/g, '').replace(/\s+/g, '').replace(/,/g, ''));
  const url = encodeURIComponent(document.getElementById('video-link').href);
  const text = encodeURIComponent('рдпреЗ рд╡реАрдбрд┐рдпреЛ рджреЗрдЦреЛ!');
  window.open(`https://twitter.com/intent/tweet?url=${url}&text=${text}&hashtags=${hashtags}`, '_blank');
}

function loadSubscriberCount(channelName) {
  let channelId;

  if (channelName === "Improve4Ever") {
    channelId = "UCh8GsXvif0i5ez9T9s4ZxGQ";  // тЬЕ рд╕рд╣реА channel ID
  }
  // Future: else if (channelName === "Inspire4Ever") { channelId = "..." }

  if (!channelId) {
    document.getElementById('channel-subs').innerText = "Subscribers: Unknown";
    return;
  }

 fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`)
    .then(res => res.json())
    .then(data => {
      if (data.items && data.items.length > 0) {
        const subs = data.items[0].statistics.subscriberCount;
        document.getElementById('channel-subs').innerText = `Subscribers: ${formatNum(subs)}`;
      } else {
        document.getElementById('channel-subs').innerText = "Subscribers: Unknown";
      }
    })
    .catch(() => {
      document.getElementById('channel-subs').innerText = "Subscribers: Unknown";
    });
}

  

  
